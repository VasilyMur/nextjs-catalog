{"version":3,"file":"5.bb9a1188e0cbddbd538e.hot-update.js","sources":["webpack:///components/AddForm.js"],"sourcesContent":["import styled from 'styled-components';\r\nimport Head from 'next/head';\r\n\r\n\r\n\r\nimport FormStyles from './styles/FormStyles';\r\n\r\n\r\nclass AddForm extends React.Component {\r\n    \r\n    state = {\r\n        city: '',\r\n        name: '',\r\n        description: '',\r\n        phone: '',\r\n        url: '',\r\n        schedule: {},\r\n        address: '',\r\n        lng: '',\r\n        lat: '',\r\n        errors: {}\r\n    }\r\n\r\n    validateHourStart = () => {\r\n        let hourStart = this.state.hourStart\r\n\r\n        let errors = {}\r\n        let formIsValid = true;\r\n        \r\n        const regex = new RegExp(/^\\d{2}\\:\\d{2}$/i);\r\n\r\n        if (!regex.test(hourStart)) {\r\n            formIsValid = false;\r\n            errors['hourStart'] = '* Введите часы в указанном формате!'\r\n        } else {\r\n            formIsValid = true;\r\n        }\r\n\r\n        this.setState({errors: errors});\r\n        return formIsValid;\r\n\r\n    }\r\n\r\n    validateHourEnd = () => {\r\n        let hourEnd = this.state.hourEnd\r\n        let errors = {}\r\n        let formIsValid = true;\r\n        \r\n        const regex = new RegExp(/^\\d{2}\\:\\d{2}$/i);\r\n\r\n        if (!regex.test(hourEnd)) {\r\n            formIsValid = false;\r\n            errors['hourEnd'] = '* Введите часы в указанном формате!'\r\n        } else {\r\n            formIsValid = true;\r\n        }\r\n\r\n        this.setState({errors: errors});\r\n        return formIsValid;\r\n\r\n    }\r\n\r\n    validatePhone = () => {\r\n        let phone = this.state.phone\r\n        let errors = {}\r\n        let formIsValid = true;\r\n\r\n        const regex = new RegExp(/\\d{1}-\\d{3}-\\d{3}-\\d{4}/i);\r\n        if (!regex.test(phone)) {\r\n            formIsValid = false;\r\n            errors['phone'] = '* Введите телефон в указанном формате!'\r\n        } else {\r\n            formIsValid = true;\r\n        }\r\n    \r\n        this.setState({errors: errors});\r\n        return formIsValid;\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const item = {\r\n            city: this.state.city,\r\n            name: this.state.name,\r\n            description: this.state.description,\r\n            phone: this.state.phone,\r\n            url: this.state.url,\r\n            days: this.state.days,\r\n            address: this.state.address,\r\n            lat: this.state.lat,\r\n            lng: this.state.lng\r\n        }\r\n\r\n        console.log(item)\r\n\r\n        if (!this.validateHourStart() || !this.validateHourEnd() || !this.validatePhone()) {\r\n            console.log('submit error')\r\n\r\n        } else {\r\n            console.log('all correct!!')\r\n            // axios.post('/api/items/create', item).then(res => {\r\n            //     console.log(res)\r\n            // }).catch((err) => {\r\n            //     console.log(err)\r\n            // })\r\n            this.setState({ city: '', name: '', description: '', phone: '', url: '', days: [], address: '', lat: '', lng: '' });\r\n        }\r\n\r\n    }\r\n\r\n    handleChange = (e) => {   \r\n        const name = e.target.name;\r\n        const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\r\n\r\n        if (e.target.type !== 'checkbox') {\r\n            this.setState({ [name]: value })\r\n        } else {\r\n            console.log(name)\r\n            if (value !== true) {\r\n                const index = this.state.days.indexOf(name); \r\n                this.setState({ days: [...this.state.days.slice(0, index), ...this.state.days.slice(index + 1)]})\r\n            } else {\r\n                this.setState({days : [...this.state.days, name]})\r\n            }\r\n        }    \r\n    }\r\n\r\n    handleAddressChange = (e) => {\r\n        const address = e.target.value\r\n        const dropdown = new google.maps.places.Autocomplete(document.getElementById('autocomplete'))\r\n        dropdown.addListener('place_changed', () => {\r\n            const place = dropdown.getPlace();\r\n            const address = place.formatted_address\r\n            const lat = place.geometry.location.lat()\r\n            const lng = place.geometry.location.lng()\r\n            \r\n            this.setState({ address, lat, lng })\r\n        });\r\n        this.setState({ address })\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n\r\n\r\n        const weekDays = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday']\r\n        return (\r\n            <React.Fragment>\r\n            <FormStyles onSubmit={this.handleSubmit}>\r\n                <fieldset>\r\n\r\n                        <label> Город\r\n                             <select  value={this.state.city}  type='text' placeholder='Город' name='city' onChange={this.handleChange} required>\r\n                                <option value=\"\"></option>\r\n                                <option value=\"moscow\">Москва</option>\r\n                                <option value=\"saint-petersburg\">Санкт-Петербург</option>\r\n                             </select>\r\n                        </label>\r\n\r\n                        <label> Телефон\r\n                            <input  value={this.state.phone}  type='text' placeholder='7-985-555-2233' name='phone' onChange={this.handleChange} required />\r\n                            {this.state.errors.phone ? <span className=\"form__error\">{this.state.errors.phone}</span> : ''}\r\n                        </label>\r\n\r\n\r\n                        <label> Name\r\n                             {/* <input  value={this.state[res]}  name={res} onChange={this.handleChange}required/> */}\r\n                             <input  value={this.state.name}  type=\"text\" placeholder='Name' name='name' onChange={this.handleChange} />\r\n                        </label>\r\n\r\n                        <label> Description\r\n                             {/* <input  value={this.state[res]}  name={res} onChange={this.handleChange}required/> */}\r\n                             <textarea  value={this.state.description}  type=\"text\" placeholder='Description' name='description' onChange={this.handleChange} />\r\n                        </label>\r\n                \r\n\r\n                        <label> Website\r\n                             {/* <input  value={this.state[res]}  name={res} onChange={this.handleChange}required/> */}\r\n                             <input  value={this.state.url}  type='url' placeholder=\"http://hello.ru\" name=\"url\" onChange={this.handleChange} />\r\n                        </label>\r\n                   \r\n\r\n                    <label>\r\n                        Address\r\n                        <input \r\n                            id=\"autocomplete\"\r\n                            placeholder=\"Введите адрес\" \r\n                            name='address' \r\n                            onChange={this.handleAddressChange}\r\n                            value={this.state.address}/>\r\n                    </label>\r\n                        \r\n\r\n                    <label>День Недели</label>\r\n                    <div className=\"workHours\">\r\n                        {weekDays.map((res, i) => {\r\n\r\n                            return <label key={i}> \r\n                            {res}\r\n                            <input key={i} \r\n                                    type=\"text\" \r\n                                    name={`${res}Open`} \r\n                                    placeholder='Open'\r\n                                    onChange={this.handleChange} />\r\n                            <input key={i} \r\n                                    type=\"text\" \r\n                                    name={`${res}Close`} \r\n                                    placeholder='Close'\r\n                                    onChange={this.handleChange} />\r\n                            </label>\r\n                        })}    \r\n                    </div>\r\n                    <button type=\"submit\">Add</button>\r\n                </fieldset>\r\n            </FormStyles>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default AddForm\n\n\n// WEBPACK FOOTER //\n// components/AddForm.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAIA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;;;;;AAaA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;;;;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;;;;;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;AAIA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAlNA;AACA;AAsNA;;;;A","sourceRoot":""}